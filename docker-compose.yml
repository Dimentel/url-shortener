version: "3.8"

services:
  app:
    build:
      context: .
    container_name: url-shortener
    command: ["/url-shortener/docker/app.sh"]
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/dbname
      - REDIS_URL=redis://redis:6379
  redis:
    image: redis:latest
    container_name: redis_app
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6379", "ping"]
      interval: 5s
      timeout: 30s
      retries: 3

  db:
    image: postgres:17
    container_name: db_app
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d dbname -p 5432"]
      interval: 5s
      timeout: 30s
      retries: 3

  celery:
    build:
      context: .
    container_name: celery_app
    command: ["/url-shortener/docker/celery.sh", "celery"]
    depends_on:
      redis:
        condition: service_healthy

  flower:
    build:
      context: .
    container_name: flower_app
    command: ["/url-shortener/docker/celery.sh", "flower"]
    depends_on:
      redis:
        condition: service_healthy
      celery:
        condition: service_started
    ports:
      - "8888:5555"

volumes:
  postgres_data: